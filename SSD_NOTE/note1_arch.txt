(conv1_1)nn.Conv2d(3, 64, kernel_size=3, padding=1)
(conv1)nn.ReLU(inplace=True)
(conv1_2)nn.Conv2d(64, 64, kernel_size=3, padding=1)
(conv1)nn.ReLU(inplace=True)
(pool1)nn.MaxPool2d(kernel_size=2, stride=2)
(conv2_1)nn.Conv2d(64, 128, kernel_size=3, padding=1)
(conv2)nn.ReLU(inplace=True)
(conv2_2)nn.Conv2d(128, 128, kernel_size=3, padding=1)
(conv2)nn.ReLU(inplace=True)
(pool2)nn.MaxPool2d(kernel_size=2, stride=2)
(conv3_1)nn.Conv2d(128, 256, kernel_size=3, padding=1)
(conv3)nn.ReLU(inplace=True)
(conv3_2)nn.Conv2d(256, 256, kernel_size=3, padding=1)
(conv3)nn.ReLU(inplace=True)
(conv3_3)nn.Conv2d(256, 256, kernel_size=3, padding=1)
(conv3)nn.ReLU(inplace=True)
(pool3)nn.MaxPool2d(kernel_size=2, stride=2, ceil_mode=True)
(conv4_1)nn.Conv2d(256, 512, kernel_size=3, padding=1)
(conv4)nn.ReLU(inplace=True)
(conv4_2)nn.Conv2d(512, 512, kernel_size=3, padding=1)
(conv4)nn.ReLU(inplace=True)
(conv4_3)nn.Conv2d(512, 512, kernel_size=3, padding=1)
(conv4)nn.ReLU(inplace=True)
L2Norm(512, 20)
(pool4)nn.MaxPool2d(kernel_size=2, stride=2)
(conv5_1)nn.Conv2d(512, 512, kernel_size=3, padding=1)
(conv5)nn.ReLU(inplace=True)
(conv5_2)nn.Conv2d(512, 512, kernel_size=3, padding=1)
(conv5)nn.ReLU(inplace=True)
(conv5_3)nn.Conv2d(512, 512, kernel_size=3, padding=1)
(conv5)nn.ReLU(inplace=True)
(pool5)nn.MaxPool2d(kernel_size=3, stride=1, padding=1)
(conv6)nn.Conv2d(512, 1024, kernel_size=3, padding=6, dilation=6)
(conv6)nn.ReLU(inplace=True)
(conv7)nn.Conv2d(1024, 1024, kernel_size=1)
(conv7)nn.ReLU(inplace=True)
Extra layers: 
nn.Conv2d(1024, 256, kernel_size=1)
nn.ReLU(inplace=True)
nn.Conv2d(256, 512, kernel_size=3, stride=2, padding=1)
nn.ReLU(inplace=True)	
nn.Conv2d(512, 128, kernel_size=1)
nn.ReLU(inplace=True)
nn.Conv2d(128, 256, kernel_size=3, stride=2, padding=1)
nn.ReLU(inplace=True)
nn.Conv2d(256, 128, kernel_size=1)	
nn.ReLU(inplace=True)
nn.Conv2d(128, 256, kernel_size=1)	
nn.ReLU(inplace=True)
nn.Conv2d(256, 128, kernel_size=1)	
nn.ReLU(inplace=True)
nn.Conv2d(128, 256, kernel_size=1)
nn.ReLU(inplace=True)
(conv4_3)(loc)nn.Conv2d(512, 4*4, kernel_size=3, padding=1)
(conv7)(loc)nn.Conv2d(1024, 4*6, kernel_size=3, padding=1)
2-layers-extra(loc)nn.Conv2d(512, 4*6, kernel_size=3, padding=1)
4-layers-extra(loc)nn.Conv2d(256, 4*6, kernel_size=3, padding=1)
6-layers-extra(loc)nn.Conv2d(256, 4*4, kernel_size=3, padding=1)
8-layers-extra(loc)nn.Conv2d(256, 4*4, kernel_size=3, padding=1)

(conv4_3)(conf)nn.Conv2d(512, 4*21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)),
(conv7)(conf)nn.Conv2d(1024, 6*21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)),
2-layers-extra(conf)nn.Conv2d(512, 6*21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)), 
4-layers-extra(conf)nn.Conv2d(256, 6*21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)), 
6-layers-extra(conf)nn.Conv2d(256, 4*21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)), 
8-layers-extra(conf)nn.Conv2d(256, 4*21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
